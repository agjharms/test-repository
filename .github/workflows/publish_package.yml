name: Publish to PyPI

# on:
#   release:
#     types: [published]

env:
    PYTHON_VERSION: "3.12"
    PACKAGE_NAME: "testpackage" # TODO Find out if we can get the package name from somewhere

permissions:
  contents: read

jobs:
  deploy-testpypi:

    runs-on: ubuntu-latest

    environment: testpypi
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install hatch
    # It's better to separate these steps, but the project is pretty small for now
    - name: Build package
      run: hatch build
    - name: Test package
      run: hatch run +py=${{ env.PYTHON_VERSION }} test:test
    - name: Push Python artifacts to PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true

  test:
    runs-on: ubuntu-latest
    needs: deploy-testpypi
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --index-url https://test.pypi.org/simple/ ${{ env.PACKAGE_NAME }
          python -m pip install flake8 pytest
          python -m pip install hatch
      - name: Test with pytest
        run: |
          hatch run +py=${{ matrix.python-version }} test:cov --doctest-modules --junitxml=junit/test-results.xml

  deploy:
    runs-on: ubuntu-latest

    environment: release
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install hatch
      # It's better to separate these steps, but the project is pretty small for now
      - name: Build package
        run: hatch build
      - name: Test package
        run: hatch run +py=${{ env.PYTHON_VERSION }} test:test
      - name: Push Python artifacts to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          skip-existing: true
